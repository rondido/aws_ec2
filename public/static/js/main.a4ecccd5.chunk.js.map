{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivdedCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","console","log","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4ecccd5.chunk.js","sourcesContent":["// 모든 소켓 로직을 이 파일에 저장\r\nimport React, { createContext, useState, useRef, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createContext();\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    // 상태(state)관리\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [stream, setStream] = useState();\r\n    const [name, setName] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [me, setMe] = useState('');\r\n\r\n    // useRef로 특정 Dom을 직접 선택\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const connectionRef = useRef();\r\n\r\n    // 로드되는 즉시 실행할 함수\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true })   // navigator로 카메라,마이크 사용 권한을 얻음\r\n            .then((currentStream) => {  // 현재 스트림을 얻음\r\n                setStream(currentStream);   // 우리가 얻은 스트림을 사용할 수 있게 setStream에 넣어줌\r\n\r\n                myVideo.current.srcObject = currentStream;  // Video iframe을 스트림의 src로 채워야 하기 때문에 ref를 처리해야함\r\n            });\r\n\r\n\r\n            socket.on('me', (id) => setMe(id)); // server에서 제공하는 'me'라는 id를 얻고, setMe에 id를 전달\r\n\r\n            socket.on('callUser', ({ from, name: callerName, signal }) => { // socket.on으로 server에서 제공하는 사용자를 호출\r\n                setCall({ isReceivdedCall: true, from, name: callerName, signal }); // isReceivdedCall \r\n              });\r\n            }, []);\r\n\r\n    // 응답 호출\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n    \r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n    \r\n        peer.on('signal', (data) => {\r\n          socket.emit('answerCall', { signal: data, to: call.from });\r\n        });\r\n    \r\n        peer.on('stream', (currentStream) => {\r\n          userVideo.current.srcObject = currentStream;\r\n        });\r\n    \r\n        peer.signal(call.signal);\r\n    \r\n        connectionRef.current = peer;\r\n      };\r\n\r\n    // 사용자 호출\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream }); // 전화를 거는 사람이기 대문에 initiator를 true로 해야함\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\r\n          });\r\n      \r\n          peer.on('stream', (currentStream) => {\r\n            userVideo.current.srcObject = currentStream;\r\n          });\r\n\r\n          socket.on('callAccepted', (signal) => {\r\n            setCallAccepted(true);\r\n      \r\n            peer.signal(signal);\r\n          });\r\n      \r\n          connectionRef.current = peer;\r\n    }\r\n\r\n    //\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n    \r\n        connectionRef.current.destroy();\r\n    \r\n        window.location.reload();\r\n      };\r\n\r\n      return (\r\n        <SocketContext.Provider value={{\r\n          call,\r\n          callAccepted,\r\n          myVideo,\r\n          userVideo,\r\n          stream,\r\n          name,\r\n          setName,\r\n          callEnded,\r\n          me,\r\n          callUser,\r\n          leaveCall,\r\n          answerCall,\r\n        }}\r\n        >\r\n          {children}\r\n        </SocketContext.Provider>\r\n      );\r\n    };\r\n    \r\n    export { ContextProvider, SocketContext };","import React, { useContext } from 'react';\r\nimport { Grid, Typography, Paper, makeStyles } from '@material-ui/core';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    video: {\r\n      width: '550px',\r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '300px',\r\n      },\r\n    },\r\n    gridContainer: {\r\n      justifyContent: 'center',\r\n      [theme.breakpoints.down('xs')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    paper: {\r\n      padding: '10px',\r\n      border: '2px solid black',\r\n      margin: '10px',\r\n    },\r\n  }));\r\n\r\n// Player 컴포넌트\r\nconst VideoPlayer = () => {\r\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call  } = useContext(SocketContext);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid container className={classes.gridContainer}>\r\n          {stream && (\r\n            <Paper className={classes.paper}>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h5\" gutterBottom>{name || 'Name'}</Typography>\r\n                <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\r\n              </Grid>\r\n            </Paper>\r\n          )}\r\n          {callAccepted && !callEnded && (\r\n            <Paper className={classes.paper}>\r\n              <Grid item xs={12} md={6}>\r\n                <Typography variant=\"h5\" gutterBottom>{call.name || 'Name'}</Typography>\r\n                <video playsInline ref={userVideo} autoPlay className={classes.video} />\r\n              </Grid>\r\n            </Paper>\r\n          )}\r\n        </Grid>\r\n      );\r\n    };\r\n\r\nexport default VideoPlayer;","import React, { useContext } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\n// 알림 컴포넌트\r\nconst Notifications = () => {\r\n    const { answerCall, call, callAccepted } = useContext(SocketContext);\r\n    \r\n    return (\r\n        <>\r\n            {call.isReceivdedCall && !callAccepted && (\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <h1>{call.name} is calling: </h1>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\r\n                        Answer\r\n                    </Button>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;","import React, { useContext, useState } from 'react';\r\n// Grid는 두 방향(가로-세로) 레이아웃 시스템 (2차원)\r\nimport { Button, TextField, Grid, Typography, Container, Paper, makeStyles } from '@material-ui/core';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard'; \r\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\r\n\r\nimport { SocketContext } from '../SocketContext';\r\n\r\n// Option 컴포넌트\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n      },\r\n      gridContainer: {\r\n        width: '100%',\r\n        [theme.breakpoints.down('xs')]: {\r\n          flexDirection: 'column',\r\n        },\r\n      },\r\n      container: {\r\n        width: '600px',\r\n        margin: '35px 0',\r\n        padding: 0,\r\n        [theme.breakpoints.down('xs')]: {\r\n          width: '80%',\r\n        },\r\n      },\r\n      margin: {\r\n        marginTop: 20,\r\n      },\r\n      padding: {\r\n        padding: 20,\r\n      },\r\n      paper: {\r\n        padding: '10px 20px',\r\n        border: '2px solid black',\r\n      },\r\n}))\r\n\r\nconst Options = ({ children }) => {\r\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext);\r\n    const [ idToCall, setIdToCall ] = useState('');\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.container}>\r\n            <Paper elevation={10} className={classes.paper}>\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid container className={classes.gridContainer}>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">Account Info</Typography>\r\n                            <TextField label=\"Name\" value={name} onChange={(e) => setName(e.target.value)} fullWidth/>\r\n                            {console.log(me)}\r\n                            <CopyToClipboard text={me} className={classes.margin}>\r\n                                <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\r\n                                    Copy Your ID\r\n                                </Button>\r\n                            </CopyToClipboard>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} className={classes.padding}>\r\n                            <Typography gutterBottom variant=\"h6\">Make a call</Typography>\r\n                            <TextField label=\"ID to Call\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth/>\r\n                            {callAccepted && !callEnded ? (\r\n                                <Button \r\n                                variant=\"contained\" \r\n                                color=\"secondary\" \r\n                                startIcon={<PhoneDisabled fontSize=\"large\" />}\r\n                                fullWidth\r\n                                onClick={leaveCall}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Hang Up\r\n                                </Button>\r\n                            ) : (\r\n                                <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                startIcon={<Phone fontSize=\"large\" />}\r\n                                fullWidth\r\n                                onClick={callUser(idToCall)}\r\n                                className={classes.margin}\r\n                                >\r\n                                    Call\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n                {children}\r\n            </Paper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Options;","import React from 'react';\r\nimport { Typography, AppBar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Notifications from './components/Notifications';\r\nimport Options from './components/Options';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      borderRadius: 15,\r\n      margin: '30px 100px',\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      width: '600px',\r\n      border: '2px solid black',\r\n  \r\n      [theme.breakpoints.down('xs')]: {\r\n        width: '90%',\r\n      },\r\n    },\r\n    image: {\r\n      marginLeft: '15px',\r\n    },\r\n    wrapper: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      width: '100%',\r\n    },\r\n  }));\r\n\r\nconst App = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n                <Typography variant=\"h2\" align=\"center\">Video Chat</Typography>\r\n           </AppBar>\r\n           <VideoPlayer />\r\n           <Options>\r\n              <Notifications />\r\n           </Options>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport { ContextProvider } from './SocketContext';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <ContextProvider>\r\n    <App />\r\n  </ContextProvider>,\r\n  document.getElementById('root'),\r\n);"],"sourceRoot":""}